{"version":3,"sources":["components/TopMenuComponent/TopMenu.js","components/SearchBarComponent/SearchBar.js","components/VideoListComponent/components/VideoListItemComponent/VideoListItem.js","components/VideoListComponent/VideoList.js","components/VideoDetailComponent/VideoDetail.js","components/MainContentComponent/MainContent.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["TopMenu","react_default","a","createElement","className","IconButton_default","color","aria-label","Menu_default","this","props","headerText","src","logo","alt","Component","SearchBar","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","term","_this2","TextField_default","id","label","type","margin","variant","style","width","value","onChange","event","onInputChange","target","setState","onSearchTermChange","VideoListItem","_ref","video","onVideoSelect","videoUrl","snippet","thumbnails","default","url","Card_default","onClick","CardMedia_default","image","title","CardContent_default","Typography_default","VideoList","videoItems","videos","map","components_VideoListItemComponent_VideoListItem","key","etag","VideoDetail","videoId","concat","component","gutterBottom","description","MainContent","selectedVideo","videoSearch","YTSearch","_this3","_","debounce","components_SearchBarComponent_SearchBar","components_VideoDetailComponent_VideoDetail","components_VideoListComponent_VideoList","App","components_TopMenuComponent_TopMenu","components_MainContentComponent_MainContent","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.1c002b5e.chunk.js","sourcesContent":["// Import library for making a component\r\nimport React, { Component } from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nimport  './TopMenu.scss';\r\nimport logo from '../../logo.svg';\r\n\r\n\r\n// Make a component\r\nclass TopMenu extends Component {\r\n    render() {\r\n        return (\r\n            <header className=\"viewStyle flex\">\r\n                {/* <header className=\"App-header\" style={viewStyle}> */}\r\n                <IconButton className=\"user-menuButton\" color=\"primary\" aria-label=\"Menu\">\r\n                    <MenuIcon />\r\n                </IconButton>\r\n                <h4 className=\"textStyle\">{this.props.headerText}</h4>\r\n                <img src={logo} className=\"user-photo\" alt=\"logo\" />\r\n                {/* <h4 style={textStyle}>{this.props.headerText}</h4> */}\r\n            </header>\r\n        );\r\n    }\r\n};\r\n\r\n// Make the component available to other parts of the app\r\nexport default TopMenu;\r\n","// Import library for making a component\r\nimport React, { Component } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport './SearchBar.scss';\r\n\r\n// Create a component\r\nclass SearchBar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = { term: 'A star is born BSO' };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <TextField\r\n                id=\"inputSearch\"\r\n                label=\"Buscador\"\r\n                type=\"search\"\r\n                margin=\"normal\"\r\n                variant=\"outlined\"\r\n                style = {{ width: '75%' }}\r\n                value={ this.state.term }\r\n                onChange={ event => this.onInputChange(event.target.value) }\r\n                />\r\n        )\r\n    }\r\n\r\n    onInputChange(term) {\r\n        this.setState({ term });\r\n        this.props.onSearchTermChange(term);\r\n    }\r\n    \r\n}\r\n\r\n// Functional Component\r\n// const SearchBar = () => {\r\n//     return <input />\r\n// }\r\n\r\n// Make the component available to other parts of the app\r\nexport default SearchBar;","// Import library for making a component\r\nimport React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport './VideoListItem.scss';\r\n\r\n// Create a component\r\nconst VideoListItem = ({ video, onVideoSelect }) => { // {video} === const video = props.video;\r\n    const videoUrl = video.snippet.thumbnails.default.url;\r\n    return (\r\n        <Card \r\n            className=\"flex cardElement\"\r\n            onClick={() => onVideoSelect(video) }>\r\n            <CardMedia\r\n                className='cover'\r\n                image={ videoUrl }\r\n                title=\"video.snippet.title\"\r\n            />\r\n            <div className=\"flex-column\">\r\n                <CardContent className=\"flex-auto\">\r\n                    <Typography variant=\"subtitle1\">\r\n                        { video.snippet.title }\r\n                    </Typography>\r\n                </CardContent>\r\n            </div>\r\n        </Card>\r\n    )\r\n};\r\n  \r\n\r\n// Make the component available to other parts of the app\r\nexport default VideoListItem;","// Import library for making a component\r\nimport React from 'react';\r\n\r\nimport VideoListItem from './components/VideoListItemComponent/VideoListItem';\r\nimport './VideoList.scss';\r\n\r\n// Create a component\r\nconst VideoList = (props) => {\r\n    const videoItems = props.videos.map(video => {\r\n        return (\r\n            <VideoListItem \r\n                onVideoSelect={ props.onVideoSelect } \r\n                key={ video.etag } \r\n                video={ video } />\r\n        );\r\n    });\r\n\r\n    return (\r\n        <ul className=\"list\">\r\n            { videoItems }\r\n        </ul>\r\n    );\r\n};\r\n// // Create a component\r\n// class VideoList extends Component {\r\n//     render() {\r\n//         return (\r\n//             <ul>\r\n//                 { this.videoItems }\r\n//             </ul>\r\n//         );\r\n//     }\r\n// };\r\n\r\n// Make the component available to other parts of the app\r\nexport default VideoList;\r\n","// Import library for making a component\r\nimport React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport './VideoDetail.scss';\r\n\r\n// Create a component\r\nconst VideoDetail = ({ video }) => {\r\n    if (!video) {\r\n        return <div>No se han encontrado resultados</div>\r\n    };\r\n\r\n    const videoId = video.id.videoId;\r\n    const url = `https://www.youtube.com/embed/${videoId}`;\r\n\r\n    return (\r\n        <Card id=\"videoDetail\" className=\"flex-column flex center-center padding-1 margin-1\">\r\n            <CardMedia\r\n            component=\"iframe\"\r\n            className=\"video\"\r\n            src={url}\r\n            title=\"Video\"\r\n            />\r\n            <CardContent>\r\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                { video.snippet.title }\r\n            </Typography>\r\n            <Typography component=\"p\">\r\n                { video.snippet.description }\r\n            </Typography>\r\n            </CardContent>\r\n        </Card> \r\n        // <div className=\"video-detail\">\r\n        //     <div>\r\n        //         <iframe className=\"embed-video\" src={ url }></iframe>\r\n        //     </div>\r\n        //     <div className=\"details\">\r\n        //         <div>\r\n        //             { video.snippet.title }\r\n        //         </div>\r\n        //         <div>\r\n        //         { video.snippet.description }\r\n        //         </div>\r\n        //     </div>\r\n        // </div>\r\n    );\r\n};\r\n\r\n// Make the component available to other parts of the app\r\nexport default VideoDetail;\r\n","// Import library for making a component\r\nimport React, { Component} from 'react';\r\nimport _ from 'lodash';\r\nimport YTSearch from 'youtube-api-search';\r\n\r\nimport SearchBar from '../SearchBarComponent/SearchBar';\r\nimport VideoList from '../VideoListComponent/VideoList';\r\nimport VideoDetail from '../VideoDetailComponent/VideoDetail';\r\nimport './MainContent.scss';\r\n\r\nconst API_KEY = 'AIzaSyAo8DuDdVDbCQ3z6kFWzqRWe7aoY5gwAA4';\r\n\r\n// Create a component\r\nclass MainContent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            videos: [],\r\n            selectedVideo: null\r\n        };\r\n\r\n        this.videoSearch('A star is born BSO');\r\n\r\n    }\r\n    \r\n    videoSearch(term) {\r\n        YTSearch({ key: API_KEY, term }, videos => {\r\n            this.setState({ \r\n                videos,\r\n                selectedVideo: videos[0]\r\n            }); // === this.setState({ videos: videos });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const videoSearch = _.debounce(term => { this.videoSearch(term) }, 300); // Lodash limit searchVideo call max. once per 300 miliseconds\r\n        \r\n        return (\r\n            <div>\r\n                <SearchBar onSearchTermChange={ videoSearch }/>\r\n                <div className=\"videoContent\">\r\n                    <VideoDetail className=\"flex-2\" video={ this.state.selectedVideo } />\r\n                    <VideoList\r\n                        className=\"flex-1\"\r\n                        onVideoSelect={ selectedVideo => this.setState({ selectedVideo })}\r\n                        videos={ this.state.videos } />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\n// Make the component available to other parts of the app\r\nexport default MainContent;\r\n","// Import a library to help create a component \r\nimport React, { Component} from 'react';\r\n\r\nimport './App.scss';\r\n\r\nimport TopMenu from './components/TopMenuComponent/TopMenu';\r\nimport MainContent from './components/MainContentComponent/MainContent';\r\n\r\n// Create a component\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <TopMenu headerText={ 'Tu video' } />\r\n        <MainContent />\r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\n// Make the component available to other parts of the app\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";"],"sourceRoot":""}